Grammar

    0 $accept: axiom "end of file"

    1 axiom: program

    2 program: ε
    3        | top ";" program

    4 top: ε
    5    | fun_def
    6    | fun_ext
    7    | expr

    8 fun_def: "def" fun_proto expr

    9 fun_proto: "id" "(" fun_proto_params ")"

   10 fun_proto_params: ε
   11                 | "id" fun_proto_params

   12 fun_ext: "extern" fun_proto

   13 expr: "number"
   14     | expr "+" expr
   15     | expr "-" expr
   16     | expr "*" expr
   17     | expr "/" expr
   18     | expr "<" expr
   19     | expr "<=" expr
   20     | expr ">" expr
   21     | expr ">=" expr
   22     | expr "==" expr
   23     | expr "!=" expr
   24     | "-" expr
   25     | identifier_expr
   26     | "(" expr ")"
   27     | ifexpr

   28 ifexpr: "if" expr "then" expr "else" expr "end"

   29 identifier_expr: "id"
   30                | "id" "(" opt_expr_list ")"

   31 opt_expr_list: ε
   32              | expr_list

   33 expr_list: expr
   34          | expr "," expr_list


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    ";" (258) 3
    "," (259) 34
    "-" (260) 15 24
    "+" (261) 14
    "*" (262) 16
    "/" (263) 17
    "(" (264) 9 26 30
    ")" (265) 9 26 30
    "<" (266) 18
    "<=" (267) 19
    ">" (268) 20
    ">=" (269) 21
    "==" (270) 22
    "!=" (271) 23
    "extern" (272) 12
    "def" (273) 8
    "if" (274) 28
    "then" (275) 28
    "else" (276) 28
    "end" (277) 28
    "id" <std::string> (278) 9 11 29 30
    "number" <double> (279) 13
    UMINUS (280)


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    axiom (27)
        on left: 1
        on right: 0
    program <std::unique_ptr<SequenceAST>> (28)
        on left: 2 3
        on right: 1 3
    top <std::unique_ptr<RootAST>> (29)
        on left: 4 5 6 7
        on right: 3
    fun_def <std::unique_ptr<FunctionAST>> (30)
        on left: 8
        on right: 5
    fun_proto <std::unique_ptr<FunctionPrototypeAST>> (31)
        on left: 9
        on right: 8 12
    fun_proto_params <std::vector<std::string>> (32)
        on left: 10 11
        on right: 9 11
    fun_ext <std::unique_ptr<FunctionPrototypeAST>> (33)
        on left: 12
        on right: 6
    expr <std::unique_ptr<ExprAST>> (34)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 7 8 14 15 16 17 18 19 20 21 22 23 24 26 28 33 34
    ifexpr <std::unique_ptr<IfExprAST>> (35)
        on left: 28
        on right: 27
    identifier_expr <std::unique_ptr<ExprAST>> (36)
        on left: 29 30
        on right: 25
    opt_expr_list <std::vector<std::unique_ptr<ExprAST>>> (37)
        on left: 31 32
        on right: 30
    expr_list <std::vector<std::unique_ptr<ExprAST>>> (38)
        on left: 33 34
        on right: 32 34


State 0

    0 $accept: • axiom "end of file"

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "extern"  shift, and go to state 3
    "def"     shift, and go to state 4
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    ";"       reduce using rule 4 (top)
    $default  reduce using rule 2 (program)

    axiom            go to state 8
    program          go to state 9
    top              go to state 10
    fun_def          go to state 11
    fun_ext          go to state 12
    expr             go to state 13
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 1

   24 expr: "-" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 16
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 2

   26 expr: "(" • expr ")"

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 17
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 3

   12 fun_ext: "extern" • fun_proto

    "id"  shift, and go to state 18

    fun_proto  go to state 19


State 4

    8 fun_def: "def" • fun_proto expr

    "id"  shift, and go to state 18

    fun_proto  go to state 20


State 5

   28 ifexpr: "if" • expr "then" expr "else" expr "end"

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 21
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 6

   29 identifier_expr: "id" •
   30                | "id" • "(" opt_expr_list ")"

    "("  shift, and go to state 22

    $default  reduce using rule 29 (identifier_expr)


State 7

   13 expr: "number" •

    $default  reduce using rule 13 (expr)


State 8

    0 $accept: axiom • "end of file"

    "end of file"  shift, and go to state 23


State 9

    1 axiom: program •

    $default  reduce using rule 1 (axiom)


State 10

    3 program: top • ";" program

    ";"  shift, and go to state 24


State 11

    5 top: fun_def •

    $default  reduce using rule 5 (top)


State 12

    6 top: fun_ext •

    $default  reduce using rule 6 (top)


State 13

    7 top: expr •
   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    "-"   shift, and go to state 25
    "+"   shift, and go to state 26
    "*"   shift, and go to state 27
    "/"   shift, and go to state 28
    "<"   shift, and go to state 29
    "<="  shift, and go to state 30
    ">"   shift, and go to state 31
    ">="  shift, and go to state 32
    "=="  shift, and go to state 33
    "!="  shift, and go to state 34

    $default  reduce using rule 7 (top)


State 14

   27 expr: ifexpr •

    $default  reduce using rule 27 (expr)


State 15

   25 expr: identifier_expr •

    $default  reduce using rule 25 (expr)


State 16

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   24     | "-" expr •

    $default  reduce using rule 24 (expr)


State 17

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   26     | "(" expr • ")"

    "-"   shift, and go to state 25
    "+"   shift, and go to state 26
    "*"   shift, and go to state 27
    "/"   shift, and go to state 28
    ")"   shift, and go to state 35
    "<"   shift, and go to state 29
    "<="  shift, and go to state 30
    ">"   shift, and go to state 31
    ">="  shift, and go to state 32
    "=="  shift, and go to state 33
    "!="  shift, and go to state 34


State 18

    9 fun_proto: "id" • "(" fun_proto_params ")"

    "("  shift, and go to state 36


State 19

   12 fun_ext: "extern" fun_proto •

    $default  reduce using rule 12 (fun_ext)


State 20

    8 fun_def: "def" fun_proto • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 37
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 21

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   28 ifexpr: "if" expr • "then" expr "else" expr "end"

    "-"     shift, and go to state 25
    "+"     shift, and go to state 26
    "*"     shift, and go to state 27
    "/"     shift, and go to state 28
    "<"     shift, and go to state 29
    "<="    shift, and go to state 30
    ">"     shift, and go to state 31
    ">="    shift, and go to state 32
    "=="    shift, and go to state 33
    "!="    shift, and go to state 34
    "then"  shift, and go to state 38


State 22

   30 identifier_expr: "id" "(" • opt_expr_list ")"

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    $default  reduce using rule 31 (opt_expr_list)

    expr             go to state 39
    ifexpr           go to state 14
    identifier_expr  go to state 15
    opt_expr_list    go to state 40
    expr_list        go to state 41


State 23

    0 $accept: axiom "end of file" •

    $default  accept


State 24

    3 program: top ";" • program

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "extern"  shift, and go to state 3
    "def"     shift, and go to state 4
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    ";"       reduce using rule 4 (top)
    $default  reduce using rule 2 (program)

    program          go to state 42
    top              go to state 10
    fun_def          go to state 11
    fun_ext          go to state 12
    expr             go to state 13
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 25

   15 expr: expr "-" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 43
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 26

   14 expr: expr "+" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 44
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 27

   16 expr: expr "*" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 45
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 28

   17 expr: expr "/" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 46
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 29

   18 expr: expr "<" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 47
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 30

   19 expr: expr "<=" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 48
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 31

   20 expr: expr ">" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 49
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 32

   21 expr: expr ">=" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 50
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 33

   22 expr: expr "==" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 51
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 34

   23 expr: expr "!=" • expr

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 52
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 35

   26 expr: "(" expr ")" •

    $default  reduce using rule 26 (expr)


State 36

    9 fun_proto: "id" "(" • fun_proto_params ")"

    "id"  shift, and go to state 53

    $default  reduce using rule 10 (fun_proto_params)

    fun_proto_params  go to state 54


State 37

    8 fun_def: "def" fun_proto expr •
   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    "-"   shift, and go to state 25
    "+"   shift, and go to state 26
    "*"   shift, and go to state 27
    "/"   shift, and go to state 28
    "<"   shift, and go to state 29
    "<="  shift, and go to state 30
    ">"   shift, and go to state 31
    ">="  shift, and go to state 32
    "=="  shift, and go to state 33
    "!="  shift, and go to state 34

    $default  reduce using rule 8 (fun_def)


State 38

   28 ifexpr: "if" expr "then" • expr "else" expr "end"

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 55
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 39

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   33 expr_list: expr •
   34          | expr • "," expr_list

    ","   shift, and go to state 56
    "-"   shift, and go to state 25
    "+"   shift, and go to state 26
    "*"   shift, and go to state 27
    "/"   shift, and go to state 28
    "<"   shift, and go to state 29
    "<="  shift, and go to state 30
    ">"   shift, and go to state 31
    ">="  shift, and go to state 32
    "=="  shift, and go to state 33
    "!="  shift, and go to state 34

    $default  reduce using rule 33 (expr_list)


State 40

   30 identifier_expr: "id" "(" opt_expr_list • ")"

    ")"  shift, and go to state 57


State 41

   32 opt_expr_list: expr_list •

    $default  reduce using rule 32 (opt_expr_list)


State 42

    3 program: top ";" program •

    $default  reduce using rule 3 (program)


State 43

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   15     | expr "-" expr •
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    "*"  shift, and go to state 27
    "/"  shift, and go to state 28

    $default  reduce using rule 15 (expr)


State 44

   14 expr: expr • "+" expr
   14     | expr "+" expr •
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    "*"  shift, and go to state 27
    "/"  shift, and go to state 28

    $default  reduce using rule 14 (expr)


State 45

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   16     | expr "*" expr •
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    $default  reduce using rule 16 (expr)


State 46

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   17     | expr "/" expr •
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    $default  reduce using rule 17 (expr)


State 47

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   18     | expr "<" expr •
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    "-"  shift, and go to state 25
    "+"  shift, and go to state 26
    "*"  shift, and go to state 27
    "/"  shift, and go to state 28

    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)

    $default  reduce using rule 18 (expr)


State 48

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   19     | expr "<=" expr •
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    "-"  shift, and go to state 25
    "+"  shift, and go to state 26
    "*"  shift, and go to state 27
    "/"  shift, and go to state 28

    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)

    $default  reduce using rule 19 (expr)


State 49

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   20     | expr ">" expr •
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr

    "-"  shift, and go to state 25
    "+"  shift, and go to state 26
    "*"  shift, and go to state 27
    "/"  shift, and go to state 28

    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 50

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   21     | expr ">=" expr •
   22     | expr • "==" expr
   23     | expr • "!=" expr

    "-"  shift, and go to state 25
    "+"  shift, and go to state 26
    "*"  shift, and go to state 27
    "/"  shift, and go to state 28

    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 51

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   22     | expr "==" expr •
   23     | expr • "!=" expr

    "-"  shift, and go to state 25
    "+"  shift, and go to state 26
    "*"  shift, and go to state 27
    "/"  shift, and go to state 28

    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 52

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   23     | expr "!=" expr •

    "-"  shift, and go to state 25
    "+"  shift, and go to state 26
    "*"  shift, and go to state 27
    "/"  shift, and go to state 28

    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)
    "=="  error (nonassociative)
    "!="  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 53

   11 fun_proto_params: "id" • fun_proto_params

    "id"  shift, and go to state 53

    $default  reduce using rule 10 (fun_proto_params)

    fun_proto_params  go to state 58


State 54

    9 fun_proto: "id" "(" fun_proto_params • ")"

    ")"  shift, and go to state 59


State 55

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   28 ifexpr: "if" expr "then" expr • "else" expr "end"

    "-"     shift, and go to state 25
    "+"     shift, and go to state 26
    "*"     shift, and go to state 27
    "/"     shift, and go to state 28
    "<"     shift, and go to state 29
    "<="    shift, and go to state 30
    ">"     shift, and go to state 31
    ">="    shift, and go to state 32
    "=="    shift, and go to state 33
    "!="    shift, and go to state 34
    "else"  shift, and go to state 60


State 56

   34 expr_list: expr "," • expr_list

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 39
    ifexpr           go to state 14
    identifier_expr  go to state 15
    expr_list        go to state 61


State 57

   30 identifier_expr: "id" "(" opt_expr_list ")" •

    $default  reduce using rule 30 (identifier_expr)


State 58

   11 fun_proto_params: "id" fun_proto_params •

    $default  reduce using rule 11 (fun_proto_params)


State 59

    9 fun_proto: "id" "(" fun_proto_params ")" •

    $default  reduce using rule 9 (fun_proto)


State 60

   28 ifexpr: "if" expr "then" expr "else" • expr "end"

    "-"       shift, and go to state 1
    "("       shift, and go to state 2
    "if"      shift, and go to state 5
    "id"      shift, and go to state 6
    "number"  shift, and go to state 7

    expr             go to state 62
    ifexpr           go to state 14
    identifier_expr  go to state 15


State 61

   34 expr_list: expr "," expr_list •

    $default  reduce using rule 34 (expr_list)


State 62

   14 expr: expr • "+" expr
   15     | expr • "-" expr
   16     | expr • "*" expr
   17     | expr • "/" expr
   18     | expr • "<" expr
   19     | expr • "<=" expr
   20     | expr • ">" expr
   21     | expr • ">=" expr
   22     | expr • "==" expr
   23     | expr • "!=" expr
   28 ifexpr: "if" expr "then" expr "else" expr • "end"

    "-"    shift, and go to state 25
    "+"    shift, and go to state 26
    "*"    shift, and go to state 27
    "/"    shift, and go to state 28
    "<"    shift, and go to state 29
    "<="   shift, and go to state 30
    ">"    shift, and go to state 31
    ">="   shift, and go to state 32
    "=="   shift, and go to state 33
    "!="   shift, and go to state 34
    "end"  shift, and go to state 63


State 63

   28 ifexpr: "if" expr "then" expr "else" expr "end" •

    $default  reduce using rule 28 (ifexpr)
